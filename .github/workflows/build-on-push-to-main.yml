name: Build AdHocAgent on push to the main + Release if V tag

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v[0-9]*'

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up .NET 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Build
        run: dotnet build --configuration Release
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
      - name: Publish
        run: dotnet publish --configuration Release --output ${{ github.workspace }}/publish
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
      - name: Zip publish directory (Windows)
        if: runner.os == 'Windows'
        run: |
          Compress-Archive -Path ${{ github.workspace }}/publish -DestinationPath ${{ github.workspace }}/AdHocAgent-${{ runner.os }}.zip
      - name: Zip publish directory (Unix)
        if: runner.os != 'Windows'
        run: |
          cd ${{ github.workspace }}
          zip -r AdHocAgent-${{ runner.os }}.zip publish
      - name: Upload zipped artifacts
        uses: actions/upload-artifact@v3
        with:
          name: AdHocAgent-${{ runner.os }}.zip
          path: ${{ github.workspace }}/AdHocAgent-${{ runner.os }}.zip

  create-github-release:
    name: Release on V tag
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download zipped artifacts
        uses: actions/download-artifact@v3
      - name: Create Release
        run: |
          gh release create ${{ github.ref_name }} --generate-notes
          gh release upload ${{ github.ref_name }} AdHocAgent-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}