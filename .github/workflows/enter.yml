name: Process Enter Discussion Messages

on:
  discussion:
    types: [created]
  workflow_dispatch:

jobs:
  process-messages:
    runs-on: ubuntu-latest
    steps:
      - name: Get the discussion category ID for "Enter"
        id: fetch_category_id
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO_OWNER="AdHoc-Protocol"
          REPO_NAME="AdHoc-protocol"
          
          CATEGORY_ID=$(gh api graphql -f query='
            query($owner: String!, $name: String!) {
              repository(owner: $owner, name: $name) {
                discussionCategories(first: 100) {
                  nodes {
                    id
                    name
                  }
                }
              }
            }
          ' -F owner="$REPO_OWNER" -F name="$REPO_NAME" | jq -r '.data.repository.discussionCategories.nodes[] | select(.name == "Enter") | .id')
          
          echo "Fetched Category ID: $CATEGORY_ID"

      - name: Get discussion messages in "Enter" category
        id: fetch_discussions
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO_OWNER="AdHoc-Protocol"
          REPO_NAME="AdHoc-protocol"
          
          MESSAGES=$(gh api graphql -f query='
            query($owner: String!, $name: String!, $categoryId: ID!) {
              repository(owner: $owner, name: $name) {
                discussions(first: 100, categoryId: $categoryId) {
                  nodes {
                    author {
                      login
                      url
                      avatarUrl
                    }
                    createdAt
                    id
                  }
                }
              }
            }
          ' -F owner="$REPO_OWNER" -F name="$REPO_NAME" -F categoryId="$CATEGORY_ID")
          
          echo "$MESSAGES" > messages.json
          cat messages.json
      
      - name: Process messages and send
        run: |
          # Parse the messages.json file and remove duplicates
          jq -r '.data.repository.discussions.nodes 
          | unique_by(.author.login) 
          | .[] | "\(.author.login), \(.author.url), \(.author.avatarUrl), \(.id)"' messages.json > unique_messages.txt
          ' messages.json > unique_messages.txt
          cat unique_messages.txt

